@model spaApp.Models.UsersAppointment
@inject spaApp.Services.IRepository repository
@inject spaApp.Data.spaAppContext dbcontext
@{
    var customeritems = repository.Customers.Select(x => new SelectListItem(x.Name, x.Id.ToString()));
    var provideritems = repository.Providers.Select(x => new SelectListItem(x.Name, x.Id.ToString()));

    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>UsersAppointment</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <label asp-for="Customer" class="control-label"></label>
                <select asp-for="CustomerId" asp-items="@customeritems" class="form-control"></select>
                <span asp-validation-for="Customer" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Provider" class="control-label"></label>
                <select asp-for="ProviderId" asp-items="@provideritems" class="form-control"></select>
                <span asp-validation-for="Provider" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Create" class="control-label"></label>
                <input asp-for="Create" class="form-control" />
                <span asp-validation-for="Create" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
